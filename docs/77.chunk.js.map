{"version":3,"sources":["webpack:///./src/app/components/codehighlighter/codehighlighter.ts?0976************************************************************","webpack:///./src/app/components/editor/editor.ts","webpack:///./src/app/components/tabview/tabview.ts?f5c4************************************************************","webpack:///./src/app/showcase/components/editor/editordemo-routing.module.ts","webpack:///./src/app/showcase/components/editor/editordemo.html","webpack:///./src/app/showcase/components/editor/editordemo.module.ts","webpack:///./src/app/showcase/components/editor/editordemo.ts"],"names":[],"mappings":"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","file":"77.chunk.js","sourcesContent":["import {NgModule,Directive,ElementRef,OnInit} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\ndeclare var Prism: any;\r\n\r\n@Directive({\r\n    selector: '[pCode]'\r\n})\r\nexport class CodeHighlighter implements OnInit {\r\n        \r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngOnInit() {\r\n        Prism.highlightElement(this.el.nativeElement);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [CodeHighlighter],\r\n    declarations: [CodeHighlighter]\r\n})\r\nexport class CodeHighlighterModule { }\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/codehighlighter/codehighlighter.ts","import {NgModule,Component,ElementRef,AfterViewInit,Input,Output,EventEmitter,ContentChild,OnChanges,forwardRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule,Header} from '../common/shared'\r\nimport {DomHandler} from '../dom/domhandler';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\n\r\ndeclare var Quill: any;\r\n\r\nexport const EDITOR_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => Editor),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'p-editor',\r\n    template: `\r\n        <div [ngClass]=\"'ui-widget ui-editor-container ui-corner-all'\" [class]=\"styleClass\">\r\n            <div class=\"ui-editor-toolbar ui-widget-header ui-corner-top\" *ngIf=\"toolbar\">\r\n                <ng-content select=\"p-header\"></ng-content>\r\n            </div>\r\n            <div class=\"ui-editor-toolbar ui-widget-header ui-corner-top\" *ngIf=\"!toolbar\">\r\n                <span class=\"ql-formats\">\r\n                    <select class=\"ql-header\">\r\n                      <option value=\"1\">Heading</option>\r\n                      <option value=\"2\">Subheading</option>\r\n                      <option selected>Normal</option>\r\n                    </select>\r\n                    <select class=\"ql-font\">\r\n                      <option selected>Sans Serif</option>\r\n                      <option value=\"serif\">Serif</option>\r\n                      <option value=\"monospace\">Monospace</option>\r\n                    </select>\r\n                </span>\r\n                <span class=\"ql-formats\">\r\n                    <button class=\"ql-bold\" aria-label=\"Bold\"></button>\r\n                    <button class=\"ql-italic\" aria-label=\"Italic\"></button>\r\n                    <button class=\"ql-underline\" aria-label=\"Underline\"></button>\r\n                </span>\r\n                <span class=\"ql-formats\">\r\n                    <select class=\"ql-color\"></select>\r\n                    <select class=\"ql-background\"></select>\r\n                </span>\r\n                <span class=\"ql-formats\">\r\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\"></button>\r\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\"></button>\r\n                    <select class=\"ql-align\">\r\n                        <option selected></option>\r\n                        <option value=\"center\"></option>\r\n                        <option value=\"right\"></option>\r\n                        <option value=\"justify\"></option>\r\n                    </select>\r\n                </span>\r\n                <span class=\"ql-formats\">\r\n                    <button class=\"ql-link\" aria-label=\"Insert Link\"></button>\r\n                    <button class=\"ql-image\" aria-label=\"Insert Image\"></button>\r\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\r\n                </span>\r\n                <span class=\"ql-formats\">\r\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\"></button>\r\n                </span>\r\n            </div>\r\n            <div class=\"ui-editor-content\" [ngStyle]=\"style\"></div>\r\n        </div>\r\n    `,\r\n    providers: [DomHandler,EDITOR_VALUE_ACCESSOR]\r\n})\r\nexport class Editor implements AfterViewInit,ControlValueAccessor {\r\n        \r\n    @Output() onTextChange: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onSelectionChange: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @ContentChild(Header) toolbar;\r\n    \r\n    @Input() style: any;\r\n        \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() placeholder: string;\r\n    \r\n    @Input() readonly: boolean;\r\n    \r\n    @Input() formats: string[];\r\n    \r\n    @Output() onInit: EventEmitter<any> = new EventEmitter();\r\n    \r\n    value: string;\r\n    \r\n    onModelChange: Function = () => {};\r\n    \r\n    onModelTouched: Function = () => {};\r\n    \r\n    quill: any;\r\n    \r\n    constructor(public el: ElementRef, public domHandler: DomHandler) {}\r\n\r\n    ngAfterViewInit() {\r\n        let editorElement = this.domHandler.findSingle(this.el.nativeElement ,'div.ui-editor-content'); \r\n        let toolbarElement = this.domHandler.findSingle(this.el.nativeElement ,'div.ui-editor-toolbar'); \r\n        \r\n        this.quill = new Quill(editorElement, {\r\n          modules: {\r\n              toolbar: toolbarElement\r\n          },\r\n          placeholder: this.placeholder,\r\n          readOnly: this.readonly,\r\n          theme: 'snow',\r\n          formats: this.formats\r\n        });\r\n                \r\n        if(this.value) {\r\n            this.quill.pasteHTML(this.value);\r\n        }\r\n        \r\n        this.quill.on('text-change', (delta, oldContents, source) => {\r\n            let html = editorElement.children[0].innerHTML;\r\n            let text = this.quill.getText();\r\n            if(html == '<p><br></p>') {\r\n                html = null;\r\n            }\r\n\r\n            this.onTextChange.emit({\r\n                htmlValue: html,\r\n                textValue: text,\r\n                delta: delta,\r\n                source: source\r\n            });\r\n            \r\n            this.onModelChange(html);\r\n\r\n            if(source === 'user') {\r\n                this.onModelTouched();\r\n            }\r\n        });\r\n        \r\n        this.quill.on('selection-change', (range, oldRange, source) => {\r\n            this.onSelectionChange.emit({\r\n                range: range,\r\n                oldRange: oldRange,\r\n                source: source\r\n            });\r\n        });\r\n        \r\n        this.onInit.emit({\r\n            editor: this.quill\r\n        });\r\n    }\r\n        \r\n    writeValue(value: any) : void {\r\n        this.value = value;\r\n                \r\n        if(this.quill) {\r\n            if(value)\r\n                this.quill.pasteHTML(value);\r\n            else\r\n                this.quill.setText('');\r\n        }\r\n    }\r\n    \r\n    registerOnChange(fn: Function): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: Function): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n    \r\n    getQuill() {\r\n        return this.quill;\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [Editor,SharedModule],\r\n    declarations: [Editor]\r\n})\r\nexport class EditorModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/editor/editor.ts","import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,HostListener,AfterContentInit,\r\n        ContentChildren,ContentChild,QueryList,TemplateRef,EmbeddedViewRef,ViewContainerRef} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule,PrimeTemplate} from '../common/shared';\r\nimport {BlockableUI} from '../common/blockableui';\r\n\r\n@Component({\r\n    selector: '[p-tabViewNav]',\r\n    host:{\r\n        '[class.ui-tabview-nav]': 'true',\r\n        '[class.ui-helper-reset]': 'true',\r\n        '[class.ui-helper-clearfix]': 'true',\r\n        '[class.ui-widget-header]': 'true',\r\n        '[class.ui-corner-all]': 'true'\r\n    },\r\n    template: `\r\n        <ng-template ngFor let-tab [ngForOf]=\"tabs\">\r\n            <li [class]=\"getDefaultHeaderClass(tab)\" [ngStyle]=\"tab.headerStyle\" role=\"tab\"\r\n                [ngClass]=\"{'ui-tabview-selected ui-state-active': tab.selected, 'ui-state-disabled': tab.disabled}\"\r\n                (click)=\"clickTab($event,tab)\" *ngIf=\"!tab.closed\"\r\n                [attr.aria-expanded]=\"tab.selected\" [attr.aria-selected]=\"tab.selected\">\r\n                <a href=\"#\">\r\n                    <span class=\"ui-tabview-left-icon fa\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon\"></span>\r\n                    <span class=\"ui-tabview-title\">{{tab.header}}</span>\r\n                    <span class=\"ui-tabview-right-icon fa\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon\"></span>\r\n                </a>\r\n                <span *ngIf=\"tab.closable\" class=\"ui-tabview-close fa fa-close\" (click)=\"clickClose($event,tab)\"></span>\r\n            </li>\r\n        </ng-template>\r\n    `,\r\n})\r\nexport class TabViewNav {\r\n    \r\n    @Input() tabs: TabPanel[];\r\n\r\n    @Input() orientation: string = 'top';\r\n    \r\n    @Output() onTabClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    @Output() onTabCloseClick: EventEmitter<any> = new EventEmitter();\r\n    \r\n    getDefaultHeaderClass(tab:TabPanel) {\r\n        let styleClass = 'ui-state-default ui-corner-' + this.orientation; \r\n        if(tab.headerStyleClass) {\r\n            styleClass = styleClass + \" \" + tab.headerStyleClass;\r\n        }\r\n        return styleClass;\r\n    }\r\n    \r\n    clickTab(event, tab: TabPanel) {\r\n        this.onTabClick.emit({\r\n            originalEvent: event,\r\n            tab: tab\r\n        })\r\n    }\r\n    \r\n    clickClose(event, tab: TabPanel) {\r\n        this.onTabCloseClick.emit({\r\n            originalEvent: event,\r\n            tab: tab\r\n        })\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-tabPanel',\r\n    template: `\r\n        <div class=\"ui-tabview-panel ui-widget-content\" [style.display]=\"selected ? 'block' : 'none'\" \r\n            role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" *ngIf=\"!closed\">\r\n            <ng-content></ng-content>\r\n            <p-templateLoader [template]=\"contentTemplate\" *ngIf=\"contentTemplate&&(cache ? loaded : selected)\"></p-templateLoader>\r\n        </div>\r\n    `\r\n})\r\nexport class TabPanel implements AfterContentInit,OnDestroy {\r\n\r\n    @Input() header: string;\r\n    \r\n    @Input() disabled: boolean;\r\n    \r\n    @Input() closable: boolean;\r\n    \r\n    @Input() headerStyle: any;\r\n    \r\n    @Input() headerStyleClass: string;\r\n    \r\n    @Input() leftIcon: string;\r\n    \r\n    @Input() rightIcon: string;\r\n    \r\n    @Input() cache: boolean = true;\r\n    \r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n    \r\n    public contentTemplate: TemplateRef<any>;\r\n    \r\n    constructor(public viewContainer: ViewContainerRef) {}\r\n        \r\n    closed: boolean;\r\n        \r\n    view: EmbeddedViewRef<any>;\r\n    \r\n    _selected: boolean;\r\n    \r\n    loaded: boolean;\r\n    \r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'content':\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n                \r\n                default:\r\n                    this.contentTemplate = item.template;\r\n                break;\r\n            }\r\n        });\r\n    }\r\n    \r\n    @Input() get selected(): boolean {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected(val: boolean) {\r\n        this._selected = val;\r\n        this.loaded = true;\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        this.view = null;\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'p-tabView',\r\n    template: `\r\n        <div [ngClass]=\"'ui-tabview ui-widget ui-widget-content ui-corner-all ui-tabview-' + orientation\" [ngStyle]=\"style\" [class]=\"styleClass\">\r\n            <ul p-tabViewNav role=\"tablist\" *ngIf=\"orientation!='bottom'\" [tabs]=\"tabs\" [orientation]=\"orientation\" \r\n                (onTabClick)=\"open($event.originalEvent, $event.tab)\" (onTabCloseClick)=\"close($event.originalEvent, $event.tab)\"></ul>\r\n            <div class=\"ui-tabview-panels\">\r\n                <ng-content></ng-content>\r\n            </div>\r\n            <ul p-tabViewNav role=\"tablist\" *ngIf=\"orientation=='bottom'\" [tabs]=\"tabs\" [orientation]=\"orientation\"\r\n                (onTabClick)=\"open($event.originalEvent, $event.tab)\" (onTabCloseClick)=\"close($event.originalEvent, $event.tab)\"></ul>\r\n        </div>\r\n    `,\r\n})\r\nexport class TabView implements AfterContentInit,BlockableUI {\r\n\r\n    @Input() orientation: string = 'top';\r\n    \r\n    @Input() style: any;\r\n    \r\n    @Input() styleClass: string;\r\n    \r\n    @Input() controlClose: boolean;\r\n        \r\n    @ContentChildren(TabPanel) tabPanels: QueryList<TabPanel>;\r\n\r\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n    \r\n    initialized: boolean;\r\n    \r\n    tabs: TabPanel[];\r\n    \r\n    _activeIndex: number;\r\n    \r\n    _lazy: boolean;\r\n\r\n    constructor(public el: ElementRef) {}\r\n    \r\n    @Input() get lazy(): boolean {\r\n        return this._lazy;\r\n    }\r\n\r\n    set lazy(val: boolean) {\r\n        this._lazy = val;\r\n        console.log('Lazy property of TabView is deprecated, use an ngTemplate inside a TabPanel instead for Lazy Loading');\r\n    }\r\n    \r\n    ngAfterContentInit() {\r\n        this.initTabs();\r\n        \r\n        this.tabPanels.changes.subscribe(_ => {\r\n            this.initTabs();\r\n        });\r\n    }\r\n    \r\n    initTabs(): void {\r\n        this.tabs = this.tabPanels.toArray();        \r\n        let selectedTab: TabPanel = this.findSelectedTab();\r\n        if(!selectedTab && this.tabs.length) {\r\n            if(this.activeIndex != null && this.tabs.length > this.activeIndex)\r\n                this.tabs[this.activeIndex].selected = true;\r\n            else \r\n                this.tabs[0].selected = true;\r\n        }\r\n    }\r\n            \r\n    open(event: Event, tab: TabPanel) {\r\n        if(tab.disabled) {\r\n            if(event) {\r\n                event.preventDefault();\r\n            }\r\n            return;\r\n        }\r\n        \r\n        if(!tab.selected) {\r\n            let selectedTab: TabPanel = this.findSelectedTab();\r\n            if(selectedTab) {\r\n                selectedTab.selected = false\r\n            }\r\n            tab.selected = true;\r\n            this.onChange.emit({originalEvent: event, index: this.findTabIndex(tab)});\r\n        }\r\n        \r\n        if(event) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    \r\n    close(event: Event, tab: TabPanel) {  \r\n        if(this.controlClose) {\r\n            this.onClose.emit({\r\n                originalEvent: event, \r\n                index: this.findTabIndex(tab),\r\n                close: () => {\r\n                    this.closeTab(tab);\r\n                }}\r\n            );\r\n        }\r\n        else {\r\n            this.closeTab(tab);\r\n            this.onClose.emit({\r\n                originalEvent: event, \r\n                index: this.findTabIndex(tab)\r\n            });\r\n        }\r\n        \r\n        event.stopPropagation();\r\n    }\r\n    \r\n    closeTab(tab: TabPanel) {\r\n        if(tab.selected) {\r\n            tab.selected = false;\r\n            for(let i = 0; i < this.tabs.length; i++) {\r\n                let tabPanel = this.tabs[i];\r\n                if(!tabPanel.closed&&!tab.disabled) {\r\n                    tabPanel.selected = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        tab.closed = true;\r\n    }\r\n    \r\n    findSelectedTab() {\r\n        for(let i = 0; i < this.tabs.length; i++) {\r\n            if(this.tabs[i].selected) {\r\n                return this.tabs[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    findTabIndex(tab: TabPanel) {\r\n        let index = -1;\r\n        for(let i = 0; i < this.tabs.length; i++) {\r\n            if(this.tabs[i] == tab) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        return index;\r\n    }\r\n    \r\n    getBlockableElement(): HTMLElement {\r\n        return this.el.nativeElement.children[0];\r\n    }\r\n    \r\n    @Input() get activeIndex(): number {\r\n        return this._activeIndex;\r\n    }\r\n\r\n    set activeIndex(val:number) {\r\n        this._activeIndex = val;\r\n        \r\n        if(this.tabs && this.tabs.length && this._activeIndex != null && this.tabs.length > this._activeIndex) {\r\n            this.findSelectedTab().selected = false;\r\n            this.tabs[this._activeIndex].selected = true;\r\n        }        \r\n    }\r\n}\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule,SharedModule],\r\n    exports: [TabView,TabPanel,TabViewNav,SharedModule],\r\n    declarations: [TabView,TabPanel,TabViewNav]\r\n})\r\nexport class TabViewModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/tabview/tabview.ts","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {EditorDemo} from './editordemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: EditorDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class EditorDemoRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/editor/editordemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">Editor</span>\\r\\n        <span>Editor is rich text editor component based on Quill.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section implementation\\\">\\r\\n    <h3 class=\\\"first\\\">Default</h3>\\r\\n    <p-editor [(ngModel)]=\\\"text1\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"></p-editor>\\r\\n    <p>Value: {{text1||'empty'}}</p>\\r\\n    \\r\\n    <button pButton type=\\\"button\\\" label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"text1=null\\\"></button>\\r\\n    \\r\\n    <hr style=\\\"border-top:0px;border-color:#dde3e6\\\">\\r\\n    \\r\\n    <h3>Custom Toolbar</h3>\\r\\n    <p-editor [(ngModel)]=\\\"text2\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\">\\r\\n        <p-header>\\r\\n            <span class=\\\"ql-formats\\\">\\r\\n                <button class=\\\"ql-bold\\\" aria-label=\\\"Bold\\\"></button>\\r\\n                <button class=\\\"ql-italic\\\" aria-label=\\\"Italic\\\"></button>\\r\\n                <button class=\\\"ql-underline\\\" aria-label=\\\"Underline\\\"></button>\\r\\n            </span>\\r\\n        </p-header>\\r\\n    </p-editor>\\r\\n    <p>Value: {{text2||'empty'}}</p>\\r\\n    \\r\\n    <button pButton type=\\\"button\\\" label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"text2=null\\\"></button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <p-tabView effect=\\\"fade\\\">\\r\\n        <p-tabPanel header=\\\"Documentation\\\">\\r\\n            <h3>Import</h3>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;EditorModule&#125; from 'primeng/primeng';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Getting Started</h3>\\r\\n            <p>Two-way value binding is defined with ngModel.</p>\\r\\n            \\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-editor [(ngModel)]=\\\"text\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;&lt;/p-editor&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class EditorDemo &#123;\\r\\n    \\r\\n    text: string;\\r\\n        \\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Model Driven Forms</h3>\\r\\n            <p>Editor can be used in a model driven form as well.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-editor formControlName=\\\"description\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;&lt;/p-editor&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Toolbar</h3>\\r\\n            <p>Editor provides a default toolbar with common options, to customize it define your elements inside the header element. Refer to <a href=\\\"http://quilljs.com/docs/modules/toolbar/\\\">Quill documentation</a> for available controls.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-editor [(ngModel)]=\\\"text2\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;\\r\\n    &lt;p-header&gt;\\r\\n        &lt;span class=\\\"ql-format-group\\\"&gt;\\r\\n            &lt;span title=\\\"Bold\\\" class=\\\"ql-format-button ql-bold\\\"&gt;&lt;/span&gt;\\r\\n            &lt;span class=\\\"ql-format-separator\\\"&gt;&lt;/span&gt;\\r\\n            &lt;span title=\\\"Italic\\\" class=\\\"ql-format-button ql-italic\\\"&gt;&lt;/span&gt;\\r\\n            &lt;span class=\\\"ql-format-separator\\\"&gt;&lt;/span&gt;\\r\\n            &lt;span title=\\\"Underline\\\" class=\\\"ql-format-button ql-underline\\\"&gt;&lt;/span&gt;\\r\\n            &lt;span class=\\\"ql-format-separator\\\"&gt;&lt;/span&gt;\\r\\n            &lt;span title=\\\"Strikethrough\\\" class=\\\"ql-format-button ql-strike\\\"&gt;&lt;/span&gt;\\r\\n        &lt;/span&gt;\\r\\n    &lt;/p-header&gt;\\r\\n&lt;/p-editor&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n            <h3>Properties</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Type</th>\\r\\n                            <th>Default</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>style</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Inline style of the container.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>styleClass</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Style class of the container.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>placeholder</td>\\r\\n                            <td>string</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Placeholder text to show when editor is empty.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>readonly</td>\\r\\n                            <td>boolean</td>\\r\\n                            <td>false</td>\\r\\n                            <td>Whether to instantiate the editor to read-only mode.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>formats</td>\\r\\n                            <td>string[]</td>\\r\\n                            <td>null</td>\\r\\n                            <td>Whitelist of formats to display, see <a href=\\\"http://quilljs.com/docs/formats/\\\">here</a> for available options.</td>\\r\\n                        </tr>\\r\\n                        \\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            \\r\\n            <h3>Events</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>onTextChange</td>\\r\\n                            <td>event.delta: Representation of the change.<br>\\r\\n                                event.source: Source of change. Will be either \\\"user\\\" or \\\"api\\\".<br>\\r\\n                                event.htmlValue: Current value as html.<br>\\r\\n                                event.textValue: Current value as text.<br></td>\\r\\n                            <td>Callback to invoke when text of editor changes.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onSelectionChange</td>\\r\\n                            <td>event.range: Object with index and length keys indicating where the selection exists.<br>\\r\\n                                event.oldRange: Object with index and length keys indicating where the previous selection was..<br>\\r\\n                                event.source: Source of change. Will be either \\\"user\\\" or \\\"api\\\".</td>\\r\\n                            <td>Callback to invoke when selected text of editor changes.</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>onInit</td>\\r\\n                            <td>event.editor: Quill editor instance.<br>\\r\\n                                event.oldRange: Object with index and length keys indicating where the previous selection was..<br>\\r\\n                                event.source: Source of change. Will be either \\\"user\\\" or \\\"api\\\".</td>\\r\\n                            <td>Callback to invoke after editor is initialized.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            \\r\\n            <p>Refer to <a href=\\\"http://beta.quilljs.com/docs/api/#events\\\">Quill documentation</a> for more information.</p>\\r\\n\\r\\n            <h3>Methods</h3>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Parameters</th>\\r\\n                            <th>Description</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>getQuill</td>\\r\\n                            <td>-</td>\\r\\n                            <td>Returns the underlying quill instance.</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Styling</h3>\\r\\n            <p>Following is the list of structural style classes, for theming classes visit <a href=\\\"#\\\" [routerLink]=\\\"['/theming']\\\">theming page</a>.</p>\\r\\n            <div class=\\\"doc-tablewrapper\\\">\\r\\n                <table class=\\\"doc-table\\\">\\r\\n                    <thead>\\r\\n                        <tr>\\r\\n                            <th>Name</th>\\r\\n                            <th>Element</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>ui-editor-container</td>\\r\\n                            <td>Container element</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-editor-toolbar</td>\\r\\n                            <td>Toolbar of the editor</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>ui-editor-content</td>\\r\\n                            <td>Editable area</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n\\r\\n            <h3>Dependencies</h3>\\r\\n            <p><a href=\\\"http://quilljs.com\\\">Quill</a> Editor 1.0.</p>\\r\\n            <p>Resources of quill needs to be added to your application. Example setup with CLI is as follows;</p>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\nnpm install quill --save\\r\\n</code>\\r\\n</pre>\\r\\n            <p>Add Quill to scripts in angular-cli.json</p>  \\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n\\\"scripts\\\": [... \\\"../node_modules/quill/dist/quill.js\\\"],\\r\\n</code>\\r\\n</pre>\\r\\n            <p>Add Quill css to styles in angular-cli.json</p>  \\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n\\\"styles\\\": [ ... \\\"../node_modules/quill/dist/quill.core.css\\\", \\\"../node_modules/quill/dist/quill.snow.css\\\"],\\r\\n</code> \\r\\n</pre>        \\r\\n\\r\\n        </p-tabPanel>\\r\\n        <p-tabPanel header=\\\"Source\\\">\\r\\n            <a href=\\\"https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/editor\\\" class=\\\"btn-viewsource\\\" target=\\\"_blank\\\">\\r\\n                <i class=\\\"fa fa-github\\\"></i>\\r\\n                <span>View on GitHub</span>\\r\\n            </a>\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;h3 class=\\\"first\\\"&gt;Default&lt;/h3&gt;\\r\\n&lt;p-editor [(ngModel)]=\\\"text1\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;&lt;/p-editor&gt;\\r\\n&lt;p&gt;Value: &#123;&#123;text1||'empty'&#125;&#125;&lt;/p&gt;\\r\\n\\r\\n&lt;button pButton type=\\\"button\\\" label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"text1=null\\\"&gt;&lt;/button&gt;\\r\\n\\r\\n&lt;hr style=\\\"border-top:0px;border-color:#dde3e6\\\"&gt;\\r\\n\\r\\n&lt;h3&gt;Custom Toolbar&lt;/h3&gt;\\r\\n&lt;p-editor [(ngModel)]=\\\"text2\\\" [style]=\\\"&#123;'height':'320px'&#125;\\\"&gt;\\r\\n    &lt;p-header&gt;\\r\\n        &lt;span class=\\\"ql-formats\\\"&gt;\\r\\n            &lt;button class=\\\"ql-bold\\\" aria-label=\\\"Bold\\\"&gt;&lt;/button&gt;\\r\\n            &lt;button class=\\\"ql-italic\\\" aria-label=\\\"Italic\\\"&gt;&lt;/button&gt;\\r\\n            &lt;button class=\\\"ql-underline\\\" aria-label=\\\"Underline\\\"&gt;&lt;/button&gt;\\r\\n        &lt;/span&gt;\\r\\n    &lt;/p-header&gt;\\r\\n&lt;/p-editor&gt;\\r\\n&lt;p&gt;Value: &#123;&#123;text2||'empty'&#125;&#125;&lt;/p&gt;\\r\\n\\r\\n&lt;button pButton type=\\\"button\\\" label=\\\"Clear\\\" icon=\\\"fa-close\\\" (click)=\\\"text2=null\\\"&gt;&lt;/button&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;Component&#125; from '@angular/core';\\r\\n\\r\\n@Component(&#123;\\r\\n    templateUrl: './editordemo.html'\\r\\n&#125;)\\r\\nexport class EditorDemo &#123;\\r\\n\\r\\n    text1: string = '&lt;div&gt;Hello World!&lt;/div&gt;&lt;div&gt;PrimeNG &lt;b&gt;Editor&lt;/b&gt; Rocks&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;';\\r\\n    \\r\\n    text2: string;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n        </p-tabPanel>\\r\\n    </p-tabView>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/editor/editordemo.html\n// module id = ./src/app/showcase/components/editor/editordemo.html\n// module chunks = 77","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule}    from '@angular/forms';\r\nimport {EditorDemo} from './editordemo';\r\nimport {EditorDemoRoutingModule} from './editordemo-routing.module';\r\nimport {EditorModule} from '../../../components/editor/editor';\r\nimport {ButtonModule} from '../../../components/button/button';\r\nimport {TabViewModule} from '../../../components/tabview/tabview';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n        FormsModule,\r\n\t\tEditorDemoRoutingModule,\r\n        EditorModule,\r\n        ButtonModule,\r\n        TabViewModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tEditorDemo\r\n\t]\r\n})\r\nexport class EditorDemoModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/editor/editordemo.module.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './editordemo.html'\r\n})\r\nexport class EditorDemo {\r\n\r\n    text1: string = '<div>Hello World!</div><div>PrimeNG <b>Editor</b> Rocks</div><div><br></div>';\r\n    \r\n    text2: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/editor/editordemo.ts"],"sourceRoot":""}